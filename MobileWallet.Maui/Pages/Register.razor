@page "/register"
@using MobileWallet.Maui.Data;
@using MobileWallet.Maui.Services;
@inject AppService _appSerivce
@inject NavigationManager NavigationManager

<style>
    body {
        overflow: hidden;
    }

    .btn-primary {
        background-color: #007bff; /* Blue color */
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    input {
        width: 100%; /* Take up 100% width of the parent */
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px; /* Rounded corners for input fields */
    }

    .form-group {
        margin-bottom: 15px;
    }

    .register-container { 
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100vh;
        position: relative;
        top: -10vh;
    }

    .register-form {
        max-width: 400px; /* Set a maximum width for the form */
        width: 100%;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 10px; /* Rounded corners */
    }
    
</style>

<i class="bi bi-arrow-return-left" @onclick = "GoBack"></i>

<div class="register-container">
    <div class ="register-form">
        <h3>Register</h3>
        <div>
            <img class="mb-5" src="images/example_logo.jpg" />
        </div>
        <EditForm Model="@model" OnValidSubmit="Submit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>First Name</label>
                <input type="text" @bind-value="model.FirstName" class="form-control" placeholder="Enter First Name"/>
                <ValidationMessage For="@(()=>model.FirstName)"/>
            </div>
            <div class="form-group">
                <label>Last Name</label>
                <input type="text" @bind-value="model.LastName" class="form-control" placeholder="Enter Last Name" />
                <ValidationMessage For="@(()=>model.LastName)" />
            </div>
            <div class="form-group">
                <label>Username</label>
                <input type="text" @bind-value="model.Username" class="form-control" placeholder="Enter Username" />
                <ValidationMessage For="@(()=>model.Username)" />
            </div>
            <div class="form-group">
                <label>Email address</label>
                <input type="email" @bind-value="model.Email" class="form-control" placeholder="Enter email">
                <ValidationMessage For="@(()=> model.Email)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <input type="password" @bind-value="model.Password" class="form-control" placeholder="Enter Password" />
                <ValidationMessage For="@(()=>model.Password)" />
            </div>
            <div class="form-group">
                <label>Repeat Password</label>
                <input type="password" @bind-value="model.RepeatPassword" class="form-control" placeholder="Repeat Password" />
                <ValidationMessage For="@(()=>model.RepeatPassword)" />
            </div>
            <div class="text-center mt-2">
                <button class="btn btn-primary" type="submit">
                    <span class="@_spinnerClass" role="status" aria-hidden="true"></span>
                    Register
                </button>

                <button class="btn btn-primary ms-5" @onclick = "GoBack">
                    <span class="@_spinnerClass" role="status" aria-hidden="true"></span>
                    Cancel
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private string _spinnerClass = "";
    RegisterModel model = new RegisterModel();

    private async void Submit()
    {
        _spinnerClass = "spinner-border spinner-border-sm";
        if(!model.Password.Equals(model.RepeatPassword, StringComparison.OrdinalIgnoreCase))
        {
            await App.Current.MainPage.DisplayAlert("Alert", "Passwords do not match!", "OK");
        }
        var res = await _appSerivce.Register(model);

        if(res.Success)
        {
            await App.Current.MainPage.DisplayAlert("Success", "Successfully registered!", "OK");
            NavigationManager.NavigateTo("/login");
        }

    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/login");
    }
}
